/* ===================================================================
   DocumentsTabletopPals · Central Theme (Base Alpha)
   Visuals + global containment/sizing + mobile polish
   =================================================================== */

@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap');

/* -------------------- Design Tokens -------------------- */
:root{
  --color-primary:     #84dd63;
  --color-primary-600: #6baa75;
  --color-primary-700: #4a7b57;

  --color-surface-1:   #121416;
  --color-surface-2:   #1b2024;
  --color-border:      #30363d;
  --color-text:        #eaf2ec;
  --input-bg:          #0f1517;

  --font-body: Poppins, system-ui, -apple-system, "Segoe UI", Roboto, Arimo, Helvetica, Arial, sans-serif;

  /* Shared control dimensions (visual baselines) */
  --control-height: 2.75rem;
  --control-radius: 12px;
  --control-pad-x: .9rem;
  --control-pad-y: .55rem;

  /* Grid gap defaults (modules can override locally) */
  --grid-gap: 1rem;
  --grid-gap-compact: .75rem;

  color-scheme: dark;
}

/* Global body font */
html body { font-family: var(--font-body) !important; }

/* Accessible focus ring */
:focus-visible { outline: 2px solid var(--color-primary); outline-offset: 2px; }

/* -------------------- Global Safety Resets -------------------- */

/* 1) Box sizing so padding/borders never push outside containers */
*, *::before, *::after { box-sizing: border-box; }

/* 2) Page background & text */
html, body { background: var(--color-surface-1); color: var(--color-text); }

/* 3) Cards/panels baseline */
.card, .panel { background: var(--color-surface-2); border: 1px solid var(--color-border); }

/* 4) Anything inside a card should not overflow its area */
.card * { max-width: 100%; }
.card img, .card svg, .card video, .card canvas, .card iframe {
  display: block; max-width: 100%; height: auto;
}
/* Clip runaway content, but prefer not to clip focus rings */
.card { overflow: hidden; }
@supports (overflow: clip) { .card { overflow: clip; } }

/* 5) Common wrappers let children shrink instead of overflow */
.grid > *, .row > *, .actions > *, .bar > *, header .actions > * { min-width: 0; max-width: 100%; }

/* -------------------- Controls (platform-wide visuals & sizing) -------------------- */

input, select, textarea {
  background: var(--input-bg);
  color: var(--color-text);
  border: 1px solid var(--color-border);
  border-radius: var(--control-radius);
  height: var(--control-height);
  padding: var(--control-pad-y) var(--control-pad-x);
  box-shadow: none;
  background-clip: padding-box;
}
.field > input, .field > select, .field > textarea {
  width: 100%; max-width: 100%; min-width: 0;
}

input::placeholder, textarea::placeholder {
  color: color-mix(in srgb, var(--color-text) 55%, transparent);
}

select {
  padding-right: 2.25rem;
  appearance: none; -webkit-appearance: none; -moz-appearance: none;
  overflow: hidden; text-overflow: ellipsis; white-space: nowrap;
  background-image:
    url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2'%3E%3Cpath d='M6 9l6 6 6-6'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right .6rem center;
  background-size: 1rem;
}
option, optgroup { background: var(--color-surface-2); color: var(--color-text); }
optgroup[label] { color: color-mix(in srgb, var(--color-text) 75%, transparent); }

input:hover, select:hover, textarea:hover { border-color: var(--color-primary-600); }
input:active, select:active, textarea:active { border-color: var(--color-primary-700); }

/* Buttons (center label, ellipsis; no overflow) */
.btn, button {
  background: var(--color-primary);
  color: #0b0b0b;
  border: 1px solid transparent;
  border-radius: 10px;

  display: inline-flex; align-items: center; justify-content: center;
  min-width: 0; max-width: 100%;
  white-space: nowrap; overflow: hidden; text-overflow: ellipsis;
  height: var(--control-height);
}
/* Hover/active for ALL buttons (not just .btn) */
.btn:hover,
button:hover,
[role="button"]:hover,
.nav button:hover,
a.btn:hover,
a[role="button"]:hover {
  background: var(--color-primary-600);
}

.btn:active,
button:active,
[role="button"]:active,
.nav button:active,
a.btn:active,
a[role="button"]:active {
  background: var(--color-primary-700);
}

/* Optional: make the current nav item look selected */
.nav button.active {
  background: color-mix(in srgb, var(--color-primary) 20%, transparent);
  border: 1px solid var(--color-primary);
  color: #0b0b0b; /* same readable contrast as primary buttons */
}

.btn:focus-visible { outline: 2px solid var(--color-primary); outline-offset: 2px; }
a.btn { text-decoration: none; }

.btn.ghost {
  background: transparent;
  color: var(--color-primary);
  border: 1px solid var(--color-primary);
}
.btn.ghost:hover { background: color-mix(in srgb, var(--color-primary) 12%, transparent); }

/* Actions rows never overlap; wrap when needed */
.actions { display: flex; align-items: center; gap: .5rem; flex-wrap: wrap; }

/* -------------------- Grid utilities (safe minmax fix) -------------------- */
/* NB: These are gentle defaults. Module CSS can still override them. */
.grid { display: grid; gap: var(--grid-gap); }
.grid.tight { gap: .5rem; }
.grid.compact { gap: var(--grid-gap-compact); }

.grid.cols-2 { grid-template-columns: repeat(2, minmax(0,1fr)); }
.grid.cols-3 { grid-template-columns: repeat(3, minmax(0,1fr)); }
.grid.cols-4 { grid-template-columns: repeat(4, minmax(0,1fr)); }
.grid.cols-5 { grid-template-columns: repeat(5, minmax(0,1fr)); }
.grid.cols-6 { grid-template-columns: repeat(6, minmax(0,1fr)); }

/* -------------------- Header / Tabs – mobile polish -------------------- */

/* Sticky header for better mobile UX */
header.wrap.bar { position: sticky; top: 0; z-index: 50; background: var(--color-surface-1); }

/* Tabs become a swipeable row on small screens (no HTML changes needed) */
@media (max-width: 900px) {
  nav.tabs {
    display: block;
    overflow-x: auto;
    white-space: nowrap;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: thin;
    padding-bottom: .25rem;
    mask-image: linear-gradient(90deg, transparent 0, #000 1rem, #000 calc(100% - 1rem), transparent 100%);
  }
  nav.tabs .tab {
    display: inline-flex;
    margin-right: .5rem;
    scroll-snap-align: start;
  }
}

/* -------------------- Optional burger (CSS-only styling)
   To activate: add <button class="burger btn ghost" aria-expanded="false"></button>
   near your nav in the header. Toggling aria-expanded=true can be done by tiny JS,
   but the styles below are ready and harmless if the button doesn’t exist. */
.burger {
  --burger-size: 24px;
  position: relative;
  width: calc(var(--burger-size) + 18px);
  padding-inline: .75rem;
}
.burger::before, .burger::after, .burger span {
  content: ""; display: block; height: 2px; background: currentColor; border-radius: 2px;
}
.burger::before { width: var(--burger-size); margin: 6px 0 4px; }
.burger span    { width: var(--burger-size); }
.burger::after  { width: var(--burger-size); margin: 4px 0 6px; }

@media (min-width: 901px) { .burger { display: none; } }
/* If you later add a class on <body> like .nav-collapsed, you can hide tabs */
/* body.nav-collapsed nav.tabs { display: none; } */

/* -------------------- Legacy aliases (back-compat) -------------------- */
:root{
  --lime-green:    var(--color-primary);
  --lime-600:      var(--color-primary-600);
  --lime-700:      var(--color-primary-700);
  --midnight-blue: var(--color-surface-1);
  --text:          var(--color-text);
  --border:        var(--color-border);
  --panel:         var(--color-surface-2);
  --panel-bg:      var(--color-surface-2);
}
/* === Global Legal Notice Bar (visual-only, no HTML/JS changes) === */
/* Edit this one line to change the message */
:root{
  --legal-notice: "TabletopPals™ — © 2025 Matthew. All rights reserved. Not affiliated with Wizards of the Coast. SRD content © Wizards of the Coast (CC-BY-4.0).";
  --legal-footer-height: 40px;
}

/* Prevent the bar covering content */
html, body { min-height: 100%; }
body { padding-bottom: var(--legal-footer-height); }

/* The fixed footer bar, injected via CSS pseudo-element */
body::after{
  content: var(--legal-notice);
  position: fixed;
  left: 0; right: 0; bottom: 0;
  z-index: 10000;
  background: var(--color-surface-2);
  color: var(--color-text);
  border-top: 1px solid var(--color-border);
  font: 12px/1.4 var(--font-body);
  text-align: center;
  padding: 8px 12px;
  pointer-events: none; /* non-clickable by design */
  white-space: pre-wrap; /* wrap nicely on narrow screens */
}

/* Smaller screens: slightly taller bar + smaller text */
@media (max-width: 480px){
  :root{ --legal-footer-height: 48px; }
  body::after{ font-size: 11px; padding: 10px 8px; }
}

/* Do not show in print */
@media print{
  body{ padding-bottom: 0; }
  body::after{ display: none; }
}
